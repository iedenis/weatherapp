{"version":3,"sources":["components/layouts/Header.js","components/layouts/Search.js","components/layouts/AddToFavourites.js","components/layouts/TodayForecast.js","components/layouts/WeatherCard.js","components/layouts/WeeklyForecast.js","components/layouts/Favourites.js","components/layouts/ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","value","handleChange","e","tab","setState","switcher","this","props","AppBar","position","Toolbar","Typography","variant","Tabs","style","styles","onChange","aria-label","Tab","label","onClick","Component","marginLeft","Search","cities","Version","Key","Type","Rank","LocalizedName","mysSnackBar","Snackbar","anchorOrigin","vertical","horizontal","city","target","getCities","length","updateCity","url","process","fetch","then","tojson","json","res","submitCity","preventDefault","onSubmit","noValidate","autoComplete","TextField","id","placeholder","location","margin","fullWidth","AddToFavourites","container","Button","addToFavourites","color","icon","faHeart","size","myStyle","verticalAlign","textAlign","marginTop","TodayForecast","isFailed","error","isLoading","today_forecast","undefined","description","temperature","location_key","today_url","docs","Temperature","Value","IconPhrase","catch","err","info","console","log","getTodayWeatherByLocationKey","prevProps","whiteSpace","toString","getIconByDescription","CircularProgress","Grid","item","xs","h1","h2","align","marginBottom","todayForecast","display","fontWeight","float","card","maxWidth","media","cardIcon","WeatherCard","fIcon","minTemp","maxTemp","dayOfTheWeek","hasButton","removeFromFavourites","isDaily","Card","CardActionArea","CardContent","gutterBottom","CardActions","WeeklyForecast","dailyForeCasts","daysOfTheWeek","getWeatherByKey","key","DailyForecasts","days","i","y","Date","getUTCDay","push","justify","map","day","idx","Minimum","Maximum","Day","Favourites","citiesForeCasts","retArray","retArrayOfForecasts","element","index","localStorage","setItem","JSON","stringify","fetchWeather","favouriteCities","getItem","parse","h4","ErrorBoundary","hasError","errorInfo","children","App","favourites","addToFavouritesClicked","fCities","arrayOfCities","includes","switchHomeFavourites","nav","name","theme","createMuiTheme","palette","primary","blue","secondary","pink","status","danger","library","add","faCloud","faSun","faCloudSun","faCloudShowersHeavy","className","MuiThemeProvider","Paper","Fragment","GridItem","width","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d907618.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport { Tab, Typography, Toolbar } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar'\n\nexport class Header extends Component {\n  state = {\n    value: 0\n  }\n  handleChange = (e, tab) => {\n    this.setState({ value: tab })\n  }\n  render() {\n    const { switcher } = this.props\n    return (\n      <div >\n        <AppBar\n          position=\"static\"\n        >\n          <Toolbar>\n\n            <Typography variant=\"h6\" >\n              Herolo weather task\n          </Typography>\n            <Tabs\n              style={styles.Tabs}\n              value={this.state.value}\n              onChange={this.handleChange}\n              aria-label=\"simple tabs example\">\n\n\n              <Tab label=\"Home\" onClick={()=>switcher('home')} />\n              <Tab label=\"Favourites\" onClick={()=>switcher('favourites')} />\n            </Tabs>\n          </Toolbar>\n\n        </AppBar>\n        {/* <TabPanel value={value} index={0}>\n              Item One\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n              Item Two\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n              Item Three\n            </TabPanel>\n        */}\n      </div>)\n  }\n}\nconst styles = {\n  Tabs: {\n    marginLeft: 'auto'\n  }\n}\nexport default Header\n","import React, { Component } from 'react'\nimport { TextField, Snackbar } from '@material-ui/core';\n\nexport class Search extends Component {\n    state = {\n        cities: [{ Version: 1, Key: \"215854\", Type: \"City\", Rank: 21, LocalizedName: \"Tel Aviv\" }]\n    }\n\n    /*\n    { Version: 1, Key: \"294021\", Type: \"City\", Rank: 10, LocalizedName: \"Moscow\" },\n        { Version: 1, Key: \"210666\", Type: \"City\", Rank: 21, LocalizedName: \"Mosul\" },\n        { Version: 1, Key: \"5193\", Type: \"City\", Rank: 41, LocalizedName: \"Mostaganem\" },\n        { Version: 1, Key: \"313839\", Type: \"City\", Rank: 41, LocalizedName: \"Moshi\" },\n        { Version: 1, Key: \"35659\", Type: \"City\", Rank: 45, LocalizedName: \"Mossoró\" },\n        { Version: 1, Key: \"126760\", Type: \"City\", Rank: 52, LocalizedName: \"Most\" },\n        { Version: 1, Key: \"254949\", Type: \"City\", Rank: 52, LocalizedName: \"Moss\" },\n        { Version: 1, Key: \"301197\", Type: \"City\", Rank: 52, LocalizedName: \"Mosselbaai\" },\n        { Version: 1, Key: \"85657\", Type: \"City\", Rank: 55, LocalizedName: \"Moshan Town\" },\n        { Version: 1, Key: \"2595153\", Type: \"City\", Rank: 55, LocalizedName: \"Mosha Town\" }\n\n    */\n\n    mysSnackBar = (props) => {\n        return <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n        //open={open}\n        // autoHideDuration={6000}\n        // onClose={handleClose}\n        >\n        </Snackbar>\n    }\n\n    handleChange = (e) => {\n        const city = e.target.value;\n        this.getCities(city);\n        if (this.state.cities.length === 0)\n            return <Snackbar></Snackbar>\n        if (this.state.cities.length === 1) {\n            this.props.updateCity(this.state.cities[0])\n        }\n    }\n    getCities = (city) => {\n        if (city) {\n            const url = `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${process.env.REACT_APP_API_KEY}&q=${city}`\n            fetch(url).then(tojson => tojson.json()).then(res => this.setState({ cities: res }))\n\n        }\n    }\n\n    submitCity = (e) => {\n        e.preventDefault();\n        if (this.state.cities.length > 0)\n            this.props.updateCity(this.state.cities[0])\n        else {\n\n        }\n    }\n\n    render() {\n        //console.log(this.state.cities)\n        const { cities } = this.state\n        return (\n            <form onSubmit={this.submitCity} noValidate autoComplete=\"off\">\n                <TextField\n                    style={this.styles}\n                    id=\"standard-textarea\"\n                    label=\"Find weather\"\n                    placeholder={cities.length === 1 ? this.state.cities[0].LocalizedName : this.props.location}\n                    margin=\"normal\"\n                    fullWidth\n                    onChange={this.handleChange}\n                />\n            </form>\n\n        )\n    }\n}\nexport default Search\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart } from '@fortawesome/free-regular-svg-icons'\nimport Button from '@material-ui/core/Button'\n\nexport class AddToFavourites extends Component {\n    render() {\n        return (\n            <div style={styles.container}>\n                <Button \n                onClick={this.props.addToFavourites} color='secondary'> \n                <FontAwesomeIcon style={styles.icon} icon={faHeart} size='2x' />\n                <span style={{ marginLeft: '10px' }}>Add to favourites</span>\n                </Button>\n            </div>\n        )\n    }\n\n}\nconst styles = {\n    myStyle: {\n        color: 'yello'\n    },\n    icon: {\n        verticalAlign: 'middle',\n        margin: '0 auto'\n    },\n    container: {\n        textAlign: 'right',\n        marginTop: '10px'\n    }\n}\n\nexport default AddToFavourites\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Typography, Grid, CircularProgress } from '@material-ui/core';\n\nexport class TodayForecast extends Component {\n    state = {\n        isFailed: false,\n        error: null,\n        isLoading: true,\n        today_forecast: undefined,\n        description: '',\n        temperature: 0\n    }\n\n\n\n\n    getTodayWeatherByLocationKey(location_key) {\n        this.setState({ isLoading: true })\n        const today_url = `https://dataservice.accuweather.com/forecasts/v1/hourly/1hour/${location_key}?apikey=z7csEsZvhMGEGXEnWi2HGjF9ZmJUraI2&metric=true`\n\n        fetch(today_url).then((docs) => docs.json()).then(res => this.setState({ today_forecast: res[0], temperature: res[0].Temperature.Value, description: res[0].IconPhrase, isLoading: false }))\n            .catch(err => this.setState({ isFailed: true, isLoading: false, error: err }))\n\n    }\n    componentDidCatch(error, info) {\n        console.log(\"ERROR\", error);\n    }\n    componentDidMount() {\n\n        this.getTodayWeatherByLocationKey(this.props.location_key)\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props !== prevProps) {\n            this.getTodayWeatherByLocationKey(this.props.location_key)\n        }\n        // \n    }\n    render() {\n        if (this.state.isFailed) {\n            return (\n                <div>\n                    <Typography variant='h4'>There was a problem with the weather fetching</Typography>\n                    <details style={{ whiteSpace: \"pre-wrap\" }}>{this.state.error.toString()}</details>\n                </div>\n            )\n\n        }\n        else {\n            const { location } = this.props\n            const { description, temperature } = this.state\n            const icon = this.props.getIconByDescription(description)\n            return (\n                this.state.isLoading ? <CircularProgress style={{ marginLeft: '100px' }} />\n                    : <Grid container >\n                        <Grid item xs={6}>\n                            <FontAwesomeIcon style={styles.icon} icon={icon[0]} size=\"9x\" color={icon[1]} />\n\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography style={styles.h1}>{location}</Typography>\n\n                            <Typography style={styles.h2}> {temperature}&deg;C </Typography>\n\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h3\" align=\"center\" style={{ marginBottom: '10px' }}>{description}</Typography>\n                        </Grid>\n                    </Grid>\n\n            )\n\n        }\n\n    }\n}\nconst styles = {\n    todayForecast: {\n        color: 'blue',\n        display: 'inline'\n    },\n    h1: {\n        margin: '10px 34px',\n        fontWeight: 'bold'\n    },\n    h2: {\n        margin: '10px 34px'\n    },\n    icon: {\n        float: 'right'\n    }\n}\nexport default TodayForecast\n","import React from 'react'\nimport { Card, CardActionArea, CardContent, Typography, CardActions, Button } from '@material-ui/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst WeatherCard = ({ fIcon, minTemp, maxTemp, temperature, description, dayOfTheWeek, city, hasButton, removeFromFavourites, isDaily, getIconByDescription }) => {\n    const icon = getIconByDescription(description)\n    return (\n        <Card style={styles.card}>\n            <CardActionArea>\n                <CardContent>\n                    <FontAwesomeIcon icon={icon[0]} color={icon[1]} size='9x' style={styles.cardIcon}></FontAwesomeIcon>\n                    <Typography gutterBottom variant=\"h5\" >\n                        {dayOfTheWeek ? dayOfTheWeek : city}\n                    </Typography>\n\n                    {hasButton ? <Typography variant=\"body2\" color=\"textSecondary\" >\n                        {description} {temperature}&deg;C\n        </Typography> : <div>{description}</div>\n                    }\n                </CardContent>\n            </CardActionArea>\n            {hasButton ? <CardActions>\n                <Button onClick={() => removeFromFavourites(city)} size=\"small\" color=\"primary\">\n                    Remove\n        </Button>\n            </CardActions >\n                : <CardActions>\n                    <Typography >Min {minTemp}&deg;C</Typography>\n                    <Typography >Max {maxTemp}&deg;C</Typography>\n\n                </CardActions>}\n        </Card>\n    )\n}\nconst styles = {\n\n    card: {\n        maxWidth: 170,\n        marginBottom: '10px',\n        marginLeft: '10px'\n    },\n    media: {\n    },\n    cardIcon: {\n        verticalAlign: 'middle',\n    }\n};\n\n\nexport default WeatherCard\n","import React, { Component } from 'react'\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport WeatherCard from './WeatherCard'\n\nexport class WeeklyForecast extends Component {\n    state = {\n        dailyForeCasts: [],\n        //firstDay:\n    }\n    daysOfTheWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n    getWeatherByKey = (key) => {\n        const url = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=z7csEsZvhMGEGXEnWi2HGjF9ZmJUraI2&metric=true`\n        fetch(url).then(docs => docs.json()).then(res => this.setState({ dailyForeCasts: res.DailyForecasts }))\n    }\n    componentDidMount() {\n        this.getWeatherByKey(this.props.location_key)\n    }\n    componentDidUpdate(prevProps) {\n       // console.log(this.props)\n        if (prevProps !== this.props) {\n            this.getWeatherByKey(this.props.location_key)\n        }\n    }\n    render() {\n\n        const days = [];\n        var firstDay\n        const { dailyForeCasts } = this.state\n        //console.log(dailyForeCasts);\n        if (this.state.dailyForeCasts.length !== 0) {\n            firstDay = new Date(dailyForeCasts[0].Date).getUTCDay()\n            // console.log(firstDay);\n            for (let i = 0, y = firstDay; i < 5; i++ , y = (++y) % 7) {\n                days.push(this.daysOfTheWeek[y])\n            }\n        }\n\n\n        return (\n            dailyForeCasts ?\n                <Grid container justify='space-between' >\n\n                    {days.map((day, idx) => <WeatherCard\n                        key={day}\n                        dayOfTheWeek={day}\n                        minTemp={dailyForeCasts[idx].Temperature.Minimum.Value}\n                        maxTemp={dailyForeCasts[idx].Temperature.Maximum.Value}\n                        description={dailyForeCasts[idx].Day.IconPhrase}\n                        getIconByDescription={this.props.getIconByDescription}\n                    >\n                    </WeatherCard>)\n\n                    }\n                </Grid> : <CircularProgress style={{ marginLeft: '100px' }} />\n        )\n    }\n}\n\n\n\nexport default WeeklyForecast","import React, { Component } from 'react'\nimport WeatherCard from './WeatherCard'\nimport { Grid, Typography } from '@material-ui/core';\nexport class Favourites extends Component {\n    state = {\n        isFailed: false,\n        error: null,\n        cities: [],\n        citiesForeCasts: []\n    }\n\n    removeFromFavourites = (city) => {\n        const { cities, citiesForeCasts } = this.state;\n        const retArray = []\n        const retArrayOfForecasts = []\n        cities.map((element, index) => {\n            if (element.location !== city) {\n                retArray.push(element)\n                retArrayOfForecasts.push(citiesForeCasts[index])\n            }\n        })\n        localStorage.setItem('favouriteCities', JSON.stringify(retArray))\n        this.setState({ cities: retArray, citiesForeCasts: retArrayOfForecasts });\n    }\n\n    fetchWeather = () => {\n        this.state.cities.map((city, idx) => {\n            const today_url = `https://dataservice.accuweather.com/forecasts/v1/hourly/1hour/${city.location_key}?apikey=z7csEsZvhMGEGXEnWi2HGjF9ZmJUraI2&metric=true`\n            fetch(today_url).then((docs) => docs.json()).then(res => {\n                const { citiesForeCasts } = this.state;\n                citiesForeCasts[idx] = res[0]\n                this.setState({ citiesForeCasts: citiesForeCasts })\n            }).catch(err => { this.setState({ isFailed: true, error: err }) })\n        })\n    }\n    componentDidMount() {\n\n        const favouriteCities = localStorage.getItem('favouriteCities')\n        // let arr =[]\n        if (favouriteCities) {\n            this.setState({ cities: JSON.parse(favouriteCities) }, this.fetchWeather)\n        }\n\n    }\n    render() {\n        const { cities, citiesForeCasts, isFailed, error } = this.state\n        if (isFailed)\n            return (<div>\n                <Typography variant='h4'>There was a problem with the weather fetching</Typography>\n                <details style={{ whiteSpace: \"pre-wrap\" }}>{error.toString()}</details>\n            </div>\n            )\n        else {\n            return (\n                <div>\n                    {\n                        cities.length === 0 ? <Typography color='primary' variant='h4' style={styles.h4}>No favourite cities added</Typography> :\n                            citiesForeCasts.length !== cities.length ? \"Waiting for wather\" :\n                                <Grid container>\n                                    {cities.map((city, idx) => {\n                                        return <WeatherCard\n                                            removeFromFavourites={this.removeFromFavourites}\n                                            hasButton='true' key={city.location_key}\n                                            city={city.location}\n\n                                            temperature={citiesForeCasts[idx].Temperature.Value}\n                                            description={citiesForeCasts[idx].IconPhrase}\n                                            getIconByDescription={this.props.getIconByDescription}\n                                        >\n                                        </WeatherCard>\n                                    })}\n                                </Grid>\n\n                    }\n                </div>\n            )\n        }\n    }\n}\nconst styles = {\n    h4: {\n        textAlign: 'center'\n    },\n    card: {\n        maxWidth: 170,\n        marginBottom: '10px'\n    },\n    media: {\n    },\n    cardIcon: {\n        color: \"orange\",\n        verticalAlign: 'middle',\n    },\n\n};\n\nexport default Favourites\n","import React, { Component } from 'react'\nimport { Typography } from '@material-ui/core';\n\nexport class ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n\n    componentDidCatch(error, errorInfo) {\n        console.log('Catched the error', error);\n        this.setState({\n            hasError: true\n        })\n    }\n    render() {\n        console.log(this.state.hasError);\n\n        if (this.state.hasError) {\n            return (\n                <div>\n                    <Typography variant='h4'>There was a problem with the weather fetching</Typography>\n                    <details style={{ whiteSpace: \"pre-wrap\" }}></details>\n                </div>\n            )\n        }\n        return this.props.children;\n\n    }\n}\n\nexport default ErrorBoundary\n","import React, { Component } from 'react'\nimport 'typeface-roboto';\nimport { createMuiTheme, MuiThemeProvider, Grid, Paper } from '@material-ui/core';\nimport { blue, pink } from '@material-ui/core/colors';\nimport Header from './components/layouts/Header'\nimport Search from './components/layouts/Search'\nimport AddToFavourites from './components/layouts/AddToFavourites'\nimport TodayForecast from './components/layouts/TodayForecast'\nimport { WeeklyForecast } from './components/layouts/WeeklyForecast';\nimport Favourites from './components/layouts/Favourites'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCloud, faSun, faCloudSun, faCloudShowersHeavy } from '@fortawesome/free-solid-svg-icons';\nimport { ErrorBoundary } from './components/layouts/ErrorBoundary'\nexport class App extends Component {\n  url = `https://dataservice.accuweather.com/forecasts/v1/daily/1day/215854?apikey=z7csEsZvhMGEGXEnWi2HGjF9ZmJUraI2=true`;\n  state = {\n    favourites: 0,\n    location: 'Tel aviv',\n    location_key: 215854,\n    description: '',\n    temperature: 0\n  }\n\n  getIconByDescription(description) {\n    switch (description) {\n      case 'Clear': return ['sun', 'orange'];\n      case 'Mostly clear': return ['cloud-sun', 'orange'];\n      case 'Sunny': return ['sun', 'orange'];\n      case 'Partly sunny' || 'Mostly sunny': return ['cloud-sun', 'orange'];\n      case 'Showers': return ['cloud-showers-heavy', '#395877']\n      case 'Intermittent clouds': return ['cloud-sun', 'orange']\n      default: return ['cloud', '#88c3f1'];\n\n    }\n  }\n\n\n  addToFavouritesClicked = () => {\n    let fCities = localStorage.getItem('favouriteCities');\n    let arrayOfCities = []\n    if (fCities) {\n      arrayOfCities = JSON.parse(fCities);\n      if (!fCities.includes(this.state.location)) {\n        arrayOfCities.push({ location: this.state.location, location_key: this.state.location_key })\n        localStorage.setItem('favouriteCities', JSON.stringify(arrayOfCities))\n      }\n    }\n    else {\n      arrayOfCities.push({ location: this.state.location, location_key: this.state.location_key })\n      localStorage.setItem('favouriteCities', JSON.stringify(arrayOfCities))\n    }\n  }\n\n  switchHomeFavourites = (nav) => {\n    if (nav === 'home') {\n      this.setState({ favourites: 0 })\n    }\n    else {\n      this.setState({ favourites: 1 })\n    }\n  }\n  /*\n  updating the city from search field\n  */\n  updateCity = (city) => {\n    console.log('new city: ', city.LocalizedName)\n    const name = city.LocalizedName;\n    const key = city.Key\n\n    console.log('name is: ', name, ' and key is ', key);\n    this.setState({ location: name, location_key: key })\n  }\n\n  theme = createMuiTheme({\n    palette: {\n      primary: blue,\n      secondary: pink,\n    },\n    status: {\n      danger: 'orange',\n    },\n  });\n  componentDidCatch(error, info) {\n    console.log(\"CATCHED ERROR\", error)\n  }\n  render() {\n    library.add(faCloud, faSun, faCloudSun, faCloudShowersHeavy)\n\n    const { location_key, location } = this.state\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={this.theme}>\n          <Header switcher={this.switchHomeFavourites}></Header>\n          <Paper >\n            {this.state.favourites ? <ErrorBoundary><Favourites getIconByDescription={this.getIconByDescription}></Favourites></ErrorBoundary> :\n              <React.Fragment>\n\n                <Paper style={styles.Paper}>\n                  <Grid container>\n\n                    <Grid item xs={12} style={styles.GridItem}>\n                      <Search\n                        location={this.state.location}\n                        updateCity={this.updateCity}\n                      ></Search>\n                    </Grid>\n\n                    <Grid item xs={6} style={styles.GridItem}>\n\n                      <ErrorBoundary>\n                        <TodayForecast\n                          location_key={location_key}\n                          location={location}\n                          getIconByDescription={this.getIconByDescription}\n                        >\n                        </TodayForecast>\n                      </ErrorBoundary>\n\n                    </Grid>\n                    <Grid item xs={6} style={styles.GridItem} ><AddToFavourites addToFavourites={this.addToFavouritesClicked} > </AddToFavourites></Grid>\n\n\n\n                  </Grid>\n\n                </Paper>\n\n\n                <Grid item style={styles.GridItem}>\n                  <ErrorBoundary>\n\n                    <WeeklyForecast\n                      city={location}\n                      location_key={location_key}\n                      getIconByDescription={this.getIconByDescription}\n                    ></WeeklyForecast>\n                  </ErrorBoundary>\n                </Grid>\n              </React.Fragment>\n\n            }\n\n\n          </Paper>\n\n        </MuiThemeProvider>\n\n      </div>\n    )\n  }\n\n}\n\nconst styles = {\n  Paper: {\n    width: '100%',\n    marginBottom: '20px',\n  },\n  GridItem: {\n    //border: '1px solid'\n  }\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}